name: DevSecOps Pipeline

on:
    workflow_dispatch:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build_docker:
      needs: [sca-pip-audit, sca-snyk, semgrep, sast-bandit, scan]
      runs-on: ubuntu-latest
      steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and Cache Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: pygoat:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Docker Image
        run: docker save -o image.tar pygoat:latest
      
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar

    sca-pip-audit:
      name: SCA Scan (pip-audit)
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.10'

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Run pip-audit
          uses: pypa/gh-action-pip-audit@v1.1.0 
          continue-on-error: true

    sca-snyk:
      name: SCA Scan (Snyk)
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Run Snyk to check for vulnerabilities
          uses: snyk/actions/python-3.10@master
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          with:
            command: test
          continue-on-error: true

    semgrep:
      name: semgrep/ci
      runs-on: ubuntu-latest
      container:
        image: semgrep/semgrep
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      steps:
      - uses: actions/checkout@v4
      - run: semgrep ci

    sast-bandit:
      name: bandit
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: '3.10'
        - run: |
            pip install bandit
            bandit -r . -ll
          continue-on-error: true

    scan:
        name: gitleaks secret scan
        runs-on: ubuntu-latest
        steps:

          - uses: actions/checkout@v4
            with:
              fetch-depth: 0

          - uses: gitleaks/gitleaks-action@v2
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
              args: |
                --redact # keys stay masked in the report
                --exit-code 0 # pipeline will not fail
                --verbose # more info (maybe delete that) 
            continue-on-error: true