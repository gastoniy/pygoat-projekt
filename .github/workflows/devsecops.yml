name: DevSecOps Pipeline

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build_docker:
      needs: [sca-pip-audit, sca-snyk, semgrep, sast-bandit, gitleaks]
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Check for relevant file changes
        id: files_changed
        uses: tj-actions/changed-files@v43
        with:
          files: |
            Dockerfile
            requirements.txt
            **.py

      - name: Build Docker image if changes were detected
        if: steps.files_changed.outputs.any_changed == 'true'
        run: |
          docker build -t pygoat:latest .

    sca-pip-audit:
      name: SCA Scan (pip-audit)
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.10'

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Run pip-audit
          uses: pypa/gh-action-pip-audit@v1.1.0 
          continue-on-error: true

    sca-snyk:
      name: SCA Scan (Snyk)
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Run Snyk to check for vulnerabilities
          uses: snyk/actions/python-3.10@master
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          with:
            command: test
          continue-on-error: true

    semgrep:
      name: semgrep/ci
      runs-on: ubuntu-latest
      container:
        image: semgrep/semgrep
      env:
        SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      steps:
      - uses: actions/checkout@v4
      - run: semgrep ci

    sast-bandit:
      name: bandit
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v5
          with:
            python-version: '3.10'
        - run: |
            pip install bandit
            bandit -r . -ll
          continue-on-error: true

    gitleaks:
      name: GitLeaks Secret Scan
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Source
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Scan for leaks
          uses: gitleaks/gitleaks-action@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
            args: detect --source=. --log-opts="--all" --report-format=sarif --report-path=results.sarif --verbose --redact
          continue-on-error: true      