name: DevSecOps Pipeline

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:
    build_docker:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Check for relevant file changes
        id: files_changed
        uses: tj-actions/changed-files@v43
        with:
          files: |
            Dockerfile
            requirements.txt
            **.py

      - name: Build Docker image if changes were detected
        if: steps.files_changed.outputs.any_changed == 'true'
        run: |
          docker build -t pygoat:latest .

    sca-security:
      name: SCA Scan (pip-audit + Snyk)
      runs-on: ubuntu-latest
      needs: build_docker

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.10'

        - name: Cache pip dependencies
          uses: actions/cache@v4
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

        - name: Run pip-audit
          uses: pypa/gh-action-pip-audit@v1.1.0 
          continue-on-error: true

        - name: Run Snyk to check for vulnerabilities
          uses: snyk/actions/python@master
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          with:
            command: test
            args: --build-python-system-deps
          continue-on-error: true

        - name: Upload dependency snapshot to Snyk Dashboard
          if: github.ref == 'refs/heads/master'
          uses: snyk/actions/python@master
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          with:
            command: monitor
            args: --build-python-system-deps

